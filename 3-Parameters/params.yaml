---

########## PARAMS ##########
Parameters:
  #Security Group Params
  SGDescription:
    Description: SG Description
    Type: String
  SGPort:
    Description: Simple description with MinVal and MaxVal
    Type: Number
    MinValue: 22
    MaxValue: 65535
  SGIngressCIDR:
    Description: IP adress range used to communicate with EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Use a valid IP CIDR range with format x.x.x.x/x.  

  #EC2 instance Params
  InstanceType:
    Description: EC2 instance InstanceType
    Type: String
    Default: t2.small
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - m1.small
    ConstraintDescription: Use a valid EC2 instance type.
  KeyPairName:
    Description: EC2 KeyPair to enable SSH access to the instances.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Use the name of an existing EC2 KeyPair

  #Network params
  VPC:
    Description: VPC to operate in
    Type: AWS::EC2::VPC::Id
  # SubnetIDs:
  #   Description: Subnet IDs that is a List of Subnet Id
  #   Type: "List<AWS::EC2::Subnet::Id>"
  # DbSubnetIpBlocks:
  #   Description: "Comma delimited list of CIDR blocks"
  #   Type: CommaDelimitedList
  #   Default: "10.0.48.0/24, 10.0.112.0/24, 10.0.176.0/24"
  # DBPasword:
  #   NoEcho: true
  #   Description: Account password for the database
  #   Type: String

########## TEMPLATE ##########
Resources:
  MyInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPairName
      ImageId: "ami-a4c7edb2"

  #Security Group
  MySecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Ref SGDescription
      SecurityGroupIngress:
        - CidrIp: !Ref SGIngressCIDR
          FromPort: !Ref SGPort
          ToPort: !Ref SGPort
          IpProtocol: tcp
      VpcId: !Ref VPC